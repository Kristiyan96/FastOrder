= minimal_form_for @order_item, html: { class: 'new-order-item' }, remote: true do |f|
  = f.input :quantity, as: :hidden, input_html: {value: '1'}

  - if @product.sizes.any?
    .col-xs-12.col-md-6.col-md-offset-3.form-container
      h4.text-center = t 'product.pick-variation'
      .col-xs-5.col-sm-6.col-md-3.col-lg-3.padding-top-small
        = f.collection_radio_buttons :size_id, @product.sizes, :id, :name,
                                      item_wrapper_class: 'col-xs-12 col-sm-12 col-md-12 col-lg-12 product_size',
                                      checked: @product.sizes.first
                    
      .col-xs-7.col-sm-6.col-md-9.col-lg-9.size_info
        - @product.sizes.each do |size|
          .col-xs-6.col-sm-9.col-md-9.col-lg-9.size_description
            = size.description
          .col-xs-6.col-sm-3.col-md-3.col-lg-3.product_size_price
            = size_price(@product, size)  

  = f.simple_fields_for :groups, @product.groups do |group|
    = render 'group_fields', f: group


  - if @restaurant.sells_online
    .col-xs-12.col-md-6.col-md-offset-3.form-container
      = f.input :demands, placeholder: "#{t 'order.demands-placeholder'}", wrapper_html: { class: 'padding-top-small' }
      = f.hidden_field :product_id, value: @product.id
    = f.submit "#{t 'order.add-to-cart'}", class: "btn col-xs-12 col-md-6 col-md-offset-3 buy-button"
   
