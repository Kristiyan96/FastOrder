.container-fluid.buy-form.col-md-6.col-md-offset-3
  - if @product.product_sizes.any?
    .text-center.pick-option
      h4 Pick an option
    = minimal_form_for @order_item, remote: true do |f|
      = f.input :quantity, as: :hidden, input_html: {value: '1'}

      .col-xs-5.col-sm-6.col-md-3.col-lg-3.col-md-offset-3.size_holder
        = f.collection_radio_buttons :product_size_id, @product.product_sizes, :id, :name,
                                      item_wrapper_class: 'col-xs-12 col-sm-12 col-md-12 col-lg-12 product_size',
                                      checked: @product.product_sizes.first
                    
      .col-xs-7.col-sm-6.col-md-3.col-lg-3.size_info
        - @product.product_sizes.each do |size|
          .col-xs-9.col-sm-9.col-md-9.col-lg-9.size_description
            = size.short_description
          .col-xs-3.col-sm-3.col-md-3.col-lg-3.product_size_price
            = product_price(@product, size)
      - if @restaurant.sells_online
        = f.input :demands, placeholder: "Any demands? Please, be concise."
        = f.hidden_field :product_id, value: @product.id
        = f.submit "Add to Cart", class: "btn col-xs-12 col-sm-12 col-md-12 col-lg-12 buy-button"
  - else
    = minimal_form_for @order_item, remote: true do |f|
      - if @restaurant.sells_online
        = f.input :quantity, as: :hidden, input_html: {value: '1'}
        = f.input :demands, placeholder: "Any demands? Please, be concise."
        = f.hidden_field :product_id, value: @product.id
        = f.submit "Add to Cart", class: "btn col-xs-12 col-sm-12 col-md-12 col-lg-12 buy-button"