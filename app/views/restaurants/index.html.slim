#restaurant-finder.col-xs-12
  .col-xs-10.col-xs-offset-1.col-md-4.col-md-offset-4.col-lg-4.col-lg-offset-4.table-code
    h3.text-center.greeting = greet.html_safe
    - if current_user
      = simple_form_for([Order.new], authenticity_token: true) do |f|
        = f.input :address, label: false, hint: false, placeholder: "Table code", input_html: {autocorrect: "off", autocapitalize: "off", autocomplete: "off"}
        = f.submit disable_with: 'Please wait ...', class: "btn btn-default center-block disabled", name: "from", value: "start ordering"
 
  = form_tag restaurants_path, remote: true, method: 'get', id: 'restaurant-search', class: "col-xs-10 col-xs-offset-1 col-md-6 col-md-offset-3" do
    #map.hidden
    .location
      button.share-location onclick="geoFindMe()" 
        .content
          i.fa.fa-map-marker.fa-3x
          br
          h3 = t 'restaurant.share-location'
      = text_field_tag :latitude, params[:latitude], class: "hidden"
      = text_field_tag :longitude, params[:longitude], class: "hidden"



.index-restaurants.col-xs-12.col-lg-10.col-lg-offset-1.infinite-pagination
    .infinite-scroll
      = render partial: "restaurant_row", collection: @restaurants, as: :restaurant
    = paginate @restaurants, params: {scrolling: true}

  
script src="//maps.google.com/maps/api/js?v=3.23&key=AIzaSyA29rpRdgUXPQoVfAhO5KlO4cV55CMSMi0"
script src="//cdn.rawgit.com/mahnunchik/markerclustererplus/master/dist/markerclusterer.min.js" 

  
javascript:
  $("#order_address").keypress(function() {
      if($(this).val().length > 2) {
           $('.btn-default').removeClass("disabled");
      } else {
           $('.btn-default').addClass("disabled");
      }
  });

  function geoFindMe() {

    function success(position) {

      $('html, body').animate({
          scrollTop: $(".index-restaurants").offset().top
      }, 1000);

      $("#map").removeClass("hidden");
      $(".location").addClass("hidden");
      document.getElementById("latitude").value = position.coords.latitude;
      document.getElementById("longitude").value = position.coords.longitude;

      handler = Gmaps.build('Google');

      handler.buildMap({ 
        provider: {
          disableDefaultUI: true,
          rotateControl: true,
          streetViewControl: true,
          streetViewControlOptions: true
        }, 
        internal: {id: 'map'}}, function(){
          markers = handler.addMarkers([
            {
            "lat": position.coords.latitude,
            "lng": position.coords.longitude
            }
          ]);
          handler.bounds.extendWith(markers);
          handler.fitMapToBounds();
          handler.getMap().setZoom(16);
        }
      );

      $('#restaurant-search').submit();
    }

    function error() {
      alert("Unable to retrieve your location");
    }

    navigator.geolocation.getCurrentPosition(success, error);
  };