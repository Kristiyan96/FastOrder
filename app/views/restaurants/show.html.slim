.container-fluid.col-md-8.col-md-offset-2.col-lg-6.col-lg-offset-3.home-page.container-white
  #restaurant-avatar
    .restaurant-name
      = @restaurant.name
    .restaurant-address
      = @restaurant.address
    = image_tag @restaurant.restaurant_avatar.url(:large)

  = link_to (t 'restaurant.menu'), restaurant_categories_path(@restaurant), class: "menu-button col-xs-6 text-center"

  = link_to (t 'restaurant.reserve'), new_restaurant_reservation_path(@restaurant), 
    class: "reservations-button col-xs-6 text-center"



.container-fluid.col-md-8.col-md-offset-2.col-lg-6.col-lg-offset-3.container-white.home-page-2
  #favorites.col-xs-12.col-sm-4
    = render 'layouts/favorite'
    hr.hidden-lg.hidden-md.hidden-sm
  #working-times.col-xs-12.col-sm-4
    i.fa.fa-calendar-check-o.working-time-awesome aria-hodden="true"
    .shchedule.panel.panel-default
      .panel-heading data-toggle="collapse" data-target="#working-hours"
        h4 = status(@restaurant)
        #working-hours.panel-collapse.collapse
          .panel-body
            - @restaurant.working_times.order('from_day ASC').each do |time|
              .schedule-day.col-xs-6
                = I18n.t(:"date.abbr_day_names")[time.from_day].upcase
              .schedule-time.col-xs-6
                = time.from_time.to_formatted_s(:time)   + "-" + time.to_time.to_formatted_s(:time)  

    hr.hidden-lg.hidden-md.hidden-sm
  #wifipassword.col-xs-12.col-sm-4
    i.fa.fa-wifi aria-hodden="true"
    .panel.panel-default.wifipanel
      .wifipass.panel-heading data-toggle="collapse" data-target="#copied" data-clipboard-action="copy" data-clipboard-target=".wifipass" 
        = @restaurant.try(:wifipassword) || "Not provided"
        #copied.panel-collapse.collapse
          .panel-body
            h5 Copied
  #show-more.col-xs-12
    hr
    h4.text-center style="color:grey;" Show more info
  #more-info.col-xs-12.hidden
    h2 More information

= render 'restaurant_images'

= render 'restaurant_map'

javascript:
  setTimeout(function() {
    handler = Gmaps.build('Google');
    handler.buildMap({ 
      provider: {
        disableDefaultUI: true,
        rotateControl: true,
        streetViewControl: true,
        streetViewControlOptions: true
      }, 
      internal: {id: 'map'}}, function(){
        markers = handler.addMarkers(#{raw @hash.to_json});
        handler.bounds.extendWith(markers);
        handler.fitMapToBounds();
        handler.getMap().setZoom(17);
      }
    );
    var clip = new Clipboard('.wifipass');
    $('.wifipass').click(function(event){
      $(".wifipass").effect( "highlight", {color:"#669966"}, 2000 );
    });
  }, 800);


